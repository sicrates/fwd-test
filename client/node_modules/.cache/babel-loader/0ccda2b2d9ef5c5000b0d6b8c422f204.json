{"ast":null,"code":"var _jsxFileName = \"/Users/sicrates/Documents/git/fwd-test/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Table, Pagination, Form } from 'react-bootstrap';\nimport network from './network';\nimport { RItem } from './components/RItem';\nimport { CItem } from './components/CItem';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      top10Entry: [],\n      top100Entry: [],\n      currentPage: 1,\n      currentTop100: [],\n      pageItems: []\n    };\n\n    this.componentWillMount = async () => {\n      network._top10().then(json => {\n        this.setState({\n          top10Entry: json.feed.entry\n        });\n      });\n\n      network._top100().then(json => {\n        this.setState({\n          top100Entry: json.feed.entry\n        });\n\n        this._top100Page();\n\n        this._pageItems();\n      });\n    };\n\n    this._search = event => {\n      let keyword = event.target.value;\n      let result = this.state.top100Entry.filter((item, index, array) => {\n        let name = item['im:name'].label;\n        let category = item.category.attributes.label;\n        let artist = item['im:artist'].label;\n        let summary = item.summary.label;\n        if (name.indexOf(keyword) > -1 || category.indexOf(keyword) > -1 || artist.indexOf(keyword) > -1 || summary.indexOf(keyword) > -1) return true;else return false;\n      });\n      this.setState({\n        currentTop100: result\n      });\n    };\n\n    this._top100Page = () => {\n      let start = this.state.currentPage * 10 - 10;\n      let end = start + 10;\n      this.setState({\n        currentTop100: this.state.top100Entry.slice(start, end)\n      });\n    };\n\n    this._pageItems = () => {\n      let items = [];\n\n      for (let i = 1; i <= 10; i++) {\n        items.push(React.createElement(Pagination.Item, {\n          id: i,\n          key: i,\n          active: i == this.state.currentPage,\n          onClick: this._page,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, i));\n      }\n\n      this.setState({\n        pageItems: items\n      }, () => {\n        this._top100Page();\n      });\n    };\n\n    this._page = event => {\n      this.setState({\n        currentPage: event.target.id\n      }, () => {\n        this._pageItems();\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sticky-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"fsearch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Search\",\n      onChange: this._search,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }))), React.createElement(Table, {\n      responsive: true,\n      className: \"rtable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.state.top10Entry.map((prop, key) => {\n      let image = prop['im:image'][0].label;\n      let name = prop['im:name'].label;\n      let type = prop.category.attributes.label;\n      return React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(RItem, {\n        id: key,\n        image: image,\n        name: name,\n        type: type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }));\n    }))))), React.createElement(\"div\", {\n      className: \"cContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Table, {\n      responsive: true,\n      className: \"ctable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        height: '500px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.state.currentTop100.map((prop, key) => {\n      let id = key + (this.state.currentPage * 10 - 9);\n      let image = prop['im:image'][0].label;\n      let name = prop['im:name'].label;\n      let type = prop.category.attributes.label;\n      let app_id = prop.id.attributes['im:id'];\n      return React.createElement(CItem, {\n        id: id,\n        image: image,\n        name: name,\n        type: type,\n        app_id: app_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      });\n    }))))))), React.createElement(Pagination, {\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.state.pageItems));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sicrates/Documents/git/fwd-test/src/App.js"],"names":["React","Component","Table","Pagination","Form","network","RItem","CItem","App","state","top10Entry","top100Entry","currentPage","currentTop100","pageItems","componentWillMount","_top10","then","json","setState","feed","entry","_top100","_top100Page","_pageItems","_search","event","keyword","target","value","result","filter","item","index","array","name","label","category","attributes","artist","summary","indexOf","start","end","slice","items","i","push","_page","id","render","map","prop","key","image","type","height","app_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AAEA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,IAA5B,QAAyC,iBAAzC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,KAAT,QAAsB,oBAAtB;;AAEA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BQ,KAF0B,GAElB;AACNC,MAAAA,UAAU,EAAE,EADN;AAENC,MAAAA,WAAW,EAAE,EAFP;AAGNC,MAAAA,WAAW,EAAE,CAHP;AAINC,MAAAA,aAAa,EAAE,EAJT;AAKNC,MAAAA,SAAS,EAAE;AALL,KAFkB;;AAAA,SAW1BC,kBAX0B,GAWL,YAAY;AAE/BV,MAAAA,OAAO,CAACW,MAAR,GAAiBC,IAAjB,CACEC,IAAI,IAAI;AAAE,aAAKC,QAAL,CAAc;AAAET,UAAAA,UAAU,EAAEQ,IAAI,CAACE,IAAL,CAAUC;AAAxB,SAAd;AAAgD,OAD5D;;AAIAhB,MAAAA,OAAO,CAACiB,OAAR,GAAkBL,IAAlB,CACEC,IAAI,IAAI;AACN,aAAKC,QAAL,CAAc;AAAER,UAAAA,WAAW,EAAEO,IAAI,CAACE,IAAL,CAAUC;AAAzB,SAAd;;AACA,aAAKE,WAAL;;AACA,aAAKC,UAAL;AACD,OALH;AAQD,KAzByB;;AAAA,SA2B1BC,OA3B0B,GA2BfC,KAAD,IAAW;AACnB,UAAIC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA3B;AACA,UAAIC,MAAM,GAAG,KAAKrB,KAAL,CAAWE,WAAX,CAAuBoB,MAAvB,CAA+B,CAACC,IAAD,EAAOC,KAAP,EAAcC,KAAd,KAAwB;AAClE,YAAIC,IAAI,GAAGH,IAAI,CAAC,SAAD,CAAJ,CAAgBI,KAA3B;AACA,YAAIC,QAAQ,GAAGL,IAAI,CAACK,QAAL,CAAcC,UAAd,CAAyBF,KAAxC;AACA,YAAIG,MAAM,GAAGP,IAAI,CAAC,WAAD,CAAJ,CAAkBI,KAA/B;AACA,YAAII,OAAO,GAAGR,IAAI,CAACQ,OAAL,CAAaJ,KAA3B;AACA,YAAGD,IAAI,CAACM,OAAL,CAAad,OAAb,IAAwB,CAAC,CAAzB,IAA8BU,QAAQ,CAACI,OAAT,CAAiBd,OAAjB,IAA4B,CAAC,CAA3D,IAAgEY,MAAM,CAACE,OAAP,CAAed,OAAf,IAA0B,CAAC,CAA3F,IAAgGa,OAAO,CAACC,OAAR,CAAgBd,OAAhB,IAA2B,CAAC,CAA/H,EACE,OAAO,IAAP,CADF,KAGE,OAAO,KAAP;AACH,OATY,CAAb;AAUA,WAAKR,QAAL,CAAc;AAAEN,QAAAA,aAAa,EAAEiB;AAAjB,OAAd;AACD,KAxCyB;;AAAA,SA0C1BP,WA1C0B,GA0CZ,MAAM;AAClB,UAAImB,KAAK,GAAG,KAAKjC,KAAL,CAAWG,WAAX,GAAyB,EAAzB,GAA8B,EAA1C;AACA,UAAI+B,GAAG,GAAGD,KAAK,GAAG,EAAlB;AACA,WAAKvB,QAAL,CAAc;AAAEN,QAAAA,aAAa,EAAE,KAAKJ,KAAL,CAAWE,WAAX,CAAuBiC,KAAvB,CAA6BF,KAA7B,EAAoCC,GAApC;AAAjB,OAAd;AACD,KA9CyB;;AAAA,SAgD1BnB,UAhD0B,GAgDb,MAAM;AACjB,UAAIqB,KAAK,GAAG,EAAZ;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA6B;AAC3BD,QAAAA,KAAK,CAACE,IAAN,CAAW,oBAAC,UAAD,CAAY,IAAZ;AAAiB,UAAA,EAAE,EAAED,CAArB;AAAwB,UAAA,GAAG,EAAEA,CAA7B;AAAgC,UAAA,MAAM,EAAEA,CAAC,IAAI,KAAKrC,KAAL,CAAWG,WAAxD;AAAqE,UAAA,OAAO,EAAE,KAAKoC,KAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA2FF,CAA3F,CAAX;AACD;;AACD,WAAK3B,QAAL,CAAc;AAAEL,QAAAA,SAAS,EAAE+B;AAAb,OAAd,EAAoC,MAAM;AACxC,aAAKtB,WAAL;AACD,OAFD;AAGD,KAxDyB;;AAAA,SA0D1ByB,KA1D0B,GA0DjBtB,KAAD,IAAW;AACjB,WAAKP,QAAL,CAAc;AAAEP,QAAAA,WAAW,EAAEc,KAAK,CAACE,MAAN,CAAaqB;AAA5B,OAAd,EAAgD,MAAM;AACpD,aAAKzB,UAAL;AACD,OAFD;AAGD,KA9DyB;AAAA;;AAgE1B0B,EAAAA,MAAM,GAAG;AAEP,WAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEN;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,WAAW,EAAC,QAAtC;AAA+C,MAAA,QAAQ,EAAE,KAAKzB,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADR,EAOQ,oBAAC,KAAD;AAAO,MAAA,UAAU,EAAE,IAAnB;AAAyB,MAAA,SAAS,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKhB,KAAL,CAAWC,UAAX,CAAsByC,GAAtB,CAA0B,CAACC,IAAD,EAAOC,GAAP,KAAe;AACxC,UAAIC,KAAK,GAAGF,IAAI,CAAC,UAAD,CAAJ,CAAiB,CAAjB,EAAoBhB,KAAhC;AACA,UAAID,IAAI,GAAGiB,IAAI,CAAC,SAAD,CAAJ,CAAgBhB,KAA3B;AACA,UAAImB,IAAI,GAAGH,IAAI,CAACf,QAAL,CAAcC,UAAd,CAAyBF,KAApC;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,oBAAC,KAAD;AAAO,QAAA,EAAE,EAAEiB,GAAX;AAAgB,QAAA,KAAK,EAAEC,KAAvB;AAA8B,QAAA,IAAI,EAAEnB,IAApC;AAA0C,QAAA,IAAI,EAAEoB,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CADF;AAED,KANA,CADH,CADF,CADF,CAPR,CAFM,EAwBE;AAAK,MAAA,SAAS,EAAG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,UAAU,EAAE,IAAnB;AAAyB,MAAA,SAAS,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAK/C,KAAL,CAAWI,aAAX,CAAyBsC,GAAzB,CAA6B,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC3C,UAAIJ,EAAE,GAAGI,GAAG,IAAI,KAAK5C,KAAL,CAAWG,WAAX,GAAyB,EAAzB,GAA8B,CAAlC,CAAZ;AACA,UAAI0C,KAAK,GAAGF,IAAI,CAAC,UAAD,CAAJ,CAAiB,CAAjB,EAAoBhB,KAAhC;AACA,UAAID,IAAI,GAAGiB,IAAI,CAAC,SAAD,CAAJ,CAAgBhB,KAA3B;AACA,UAAImB,IAAI,GAAGH,IAAI,CAACf,QAAL,CAAcC,UAAd,CAAyBF,KAApC;AACA,UAAIqB,MAAM,GAAGL,IAAI,CAACH,EAAL,CAAQX,UAAR,CAAmB,OAAnB,CAAb;AACA,aACE,oBAAC,KAAD;AAAO,QAAA,EAAE,EAAEW,EAAX;AAAe,QAAA,KAAK,EAAEK,KAAtB;AAA6B,QAAA,IAAI,EAAEnB,IAAnC;AAAyC,QAAA,IAAI,EAAEoB,IAA/C;AAAqD,QAAA,MAAM,EAAEE,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAED,KARA,CADD,CADF,CADF,CADF,CADF,CADF,CAxBF,EA8CE,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKhD,KAAL,CAAWK,SADd,CA9CF,CAFF;AAwDD;;AA1HyB;;AA6H5B,eAAeN,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { Table, Pagination, Form, } from 'react-bootstrap'\nimport network from './network'\nimport { RItem } from './components/RItem'\nimport { CItem } from './components/CItem'\n\nclass App extends Component {\n\n  state = {\n    top10Entry: [],\n    top100Entry: [],\n    currentPage: 1, \n    currentTop100: [],\n    pageItems: [], \n\n  }\n\n  componentWillMount = async () => {\n\n    network._top10().then(\n      json => { this.setState({ top10Entry: json.feed.entry }) }\n    )\n\n    network._top100().then(\n      json => {\n        this.setState({ top100Entry: json.feed.entry })\n        this._top100Page()\n        this._pageItems()\n      }\n    )\n\n  }\n\n  _search = (event) => {\n    let keyword = event.target.value\n    let result = this.state.top100Entry.filter( (item, index, array) => {\n      let name = item['im:name'].label\n      let category = item.category.attributes.label\n      let artist = item['im:artist'].label\n      let summary = item.summary.label\n      if(name.indexOf(keyword) > -1 || category.indexOf(keyword) > -1 || artist.indexOf(keyword) > -1 || summary.indexOf(keyword) > -1)\n        return true\n      else\n        return false\n    })\n    this.setState({ currentTop100: result  })\n  }\n\n  _top100Page = () => {\n    let start = this.state.currentPage * 10 - 10\n    let end = start + 10\n    this.setState({ currentTop100: this.state.top100Entry.slice(start, end)  })\n  }\n\n  _pageItems = () => {\n    let items = [];\n    for (let i = 1; i <= 10; i++){\n      items.push(<Pagination.Item id={i} key={i} active={i == this.state.currentPage} onClick={this._page}>{i}</Pagination.Item>)\n    }\n    this.setState({ pageItems: items }, () => {\n      this._top100Page()\n    })\n  }\n\n  _page = (event) => {\n    this.setState({ currentPage: event.target.id }, () => {\n      this._pageItems()\n    })\n  }\n\n  render() {\n\n    return (\n\n      <div className=\"App\">\n\n<div className=\"sticky-top\">\n        <Form>\n          <Form.Group controlId=\"fsearch\">\n            <Form.Control type=\"text\" placeholder=\"Search\" onChange={this._search}/>\n          </Form.Group>\n        </Form>\n\n        <Table responsive={true} className=\"rtable\">\n          <tbody>\n            <tr>\n              {this.state.top10Entry.map((prop, key) => {\n                let image = prop['im:image'][0].label\n                let name = prop['im:name'].label\n                let type = prop.category.attributes.label\n                return (\n                  <td><RItem id={key} image={image} name={name} type={type} /></td>)\n              })}\n            </tr>\n          </tbody>\n        </Table>\n</div>\n\n        <div className = 'cContainer'>\n          <Table responsive={true} className=\"ctable\">\n            <tbody>\n              <tr>\n                <td>\n                  <div style={{ height: '500px', }}>\n                  {this.state.currentTop100.map((prop, key) => {\n                    let id = key + (this.state.currentPage * 10 - 9)\n                    let image = prop['im:image'][0].label\n                    let name = prop['im:name'].label\n                    let type = prop.category.attributes.label\n                    let app_id = prop.id.attributes['im:id']\n                    return (\n                      <CItem id={id} image={image} name={name} type={type} app_id={app_id}/>)                  \n                  })}\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n            </Table>\n          </div>\n\n        <Pagination size=\"sm\">\n          {this.state.pageItems}\n        </Pagination>\n\n      </div>\n\n    )\n\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}