{"ast":null,"code":"'use strict';\n\nvar utils = require('./utils');\n\nvar URL = require('url');\n\nmodule.exports = function createClient(port_arg, host_arg, options) {\n  if (typeof port_arg === 'number' || typeof port_arg === 'string' && /^\\d+$/.test(port_arg)) {\n    var host;\n\n    if (typeof host_arg === 'string') {\n      host = host_arg;\n    } else {\n      if (options && host_arg) {\n        throw new TypeError('Unknown type of connection in createClient()');\n      }\n\n      options = options || host_arg;\n    }\n\n    options = utils.clone(options);\n    options.host = host || options.host;\n    options.port = port_arg;\n  } else if (typeof port_arg === 'string' || port_arg && port_arg.url) {\n    options = utils.clone(port_arg.url ? port_arg : host_arg || options);\n    var url = port_arg.url || port_arg;\n    var parsed = URL.parse(url, true, true); // [redis:]//[[user][:password]@][host][:port][/db-number][?db=db-number[&password=bar[&option=value]]]\n\n    if (parsed.slashes) {\n      // We require slashes\n      if (parsed.auth) {\n        options.password = parsed.auth.split(':')[1];\n      }\n\n      if (parsed.protocol && parsed.protocol !== 'redis:') {\n        console.warn('node_redis: WARNING: You passed \"' + parsed.protocol.substring(0, parsed.protocol.length - 1) + '\" as protocol instead of the \"redis\" protocol!');\n      }\n\n      if (parsed.pathname && parsed.pathname !== '/') {\n        options.db = parsed.pathname.substr(1);\n      }\n\n      if (parsed.hostname) {\n        options.host = parsed.hostname;\n      }\n\n      if (parsed.port) {\n        options.port = parsed.port;\n      }\n\n      if (parsed.search !== '') {\n        var elem;\n\n        for (elem in parsed.query) {\n          // If options are passed twice, only the parsed options will be used\n          if (elem in options) {\n            if (options[elem] === parsed.query[elem]) {\n              console.warn('node_redis: WARNING: You passed the ' + elem + ' option twice!');\n            } else {\n              throw new RangeError('The ' + elem + ' option is added twice and does not match');\n            }\n          }\n\n          options[elem] = parsed.query[elem];\n        }\n      }\n    } else if (parsed.hostname) {\n      throw new RangeError('The redis url must begin with slashes \"//\" or contain slashes after the redis protocol');\n    } else {\n      options.path = url;\n    }\n  } else if (typeof port_arg === 'object' || port_arg === undefined) {\n    options = utils.clone(port_arg || options);\n    options.host = options.host || host_arg;\n\n    if (port_arg && arguments.length !== 1) {\n      throw new TypeError('To many arguments passed to createClient. Please only pass the options object');\n    }\n  }\n\n  if (!options) {\n    throw new TypeError('Unknown type of connection in createClient()');\n  }\n\n  return options;\n};","map":null,"metadata":{},"sourceType":"script"}